services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: productsdb
    volumes:
      - mongo_data:/data/db

  spring-crud-mongodb:
    build:
      context: ./Spring-CRUD-MongoDB
    container_name: spring-crud-mongodb
    ports:
      - "9090:9090"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/productsdb
    depends_on:
      - mongo
      - eureka-server

  mysql:
    image: mysql:8.0
    container_name: mysql-order
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: orderdb
      MYSQL_USER: orderuser
      MYSQL_PASSWORD: orderpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_order_data:/var/lib/mysql

  order-service:
    build:
      context: ./Order
    container_name: order-service
    depends_on:
      - mysql
      - spring-crud-mongodb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/orderdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: orderuser
      SPRING_DATASOURCE_PASSWORD: orderpassword
    ports:
      - "8082:8082"
    volumes:
      - ./Order/target/Order-0.0.1-SNAPSHOT.jar:/app/app.jar
    command: ["java", "-jar", "/app/app.jar"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/eureka"]
      interval: 10s
      timeout: 5s
      retries: 10

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    depends_on:
      - eureka-server
      - spring-crud-mongodb
      - order-service
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8085:8080"
    depends_on:
      - mysql

volumes:
  mongo_data:
  mysql_order_data:
